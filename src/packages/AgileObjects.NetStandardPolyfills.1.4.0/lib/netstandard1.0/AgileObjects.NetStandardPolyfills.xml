<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AgileObjects.NetStandardPolyfills</name>
    </assembly>
    <members>
        <member name="T:AgileObjects.NetStandardPolyfills.AssemblyExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining Assembly information in .NET Standard 1.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.AssemblyExtensionsPolyfill.GetAllTypes(System.Reflection.Assembly)">
            <summary>
            Gets the types defined in this <paramref name="assembly"/>.
            </summary>
            <param name="assembly">The Assembly for which to retrieve the Types.</param>
            <returns>
            An array that contains all the types that are defined in this <paramref name="assembly"/>.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.ConstructorExtensionsPolyfill">
            <summary>
            Provides a set of static methods methods for obtaining constructor information in .NET Standard 1.0 and .NET 4.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.ConstructorExtensionsPolyfill.GetPublicInstanceConstructors(System.Type)">
            <summary>
            Gets the public, instance-scoped constructors for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type for which to retrieve the constructors.</param>
            <returns>The given <paramref name="type"/>'s public, instance-scoped constructors.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.ConstructorExtensionsPolyfill.GetPublicInstanceConstructor(System.Type,System.Type[])">
            <summary>
            Gets the public, instance-scoped constructor for the given <paramref name="type"/> which has the 
            given <paramref name="parameterTypes"/>.
            </summary>
            <param name="type">The type for which to retrieve the constructor.</param>
            <param name="parameterTypes">
            Zero or more Types representing the number, order, and type of the parameters for the constructor 
            to retrieve. This parameter is optional.
            </param>
            <returns>
            The given <paramref name="type"/>'s matching public, instance-scoped constructor, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.ConstructorExtensionsPolyfill.GetNonPublicInstanceConstructors(System.Type)">
            <summary>
            Gets the non-public, instance-scoped constructors for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type for which to retrieve the constructors.</param>
            <returns>The given <paramref name="type"/>'s non-public, instance-scoped constructors.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.ConstructorExtensionsPolyfill.GetNonPublicInstanceConstructor(System.Type,System.Type[])">
            <summary>
            Gets the non-public, instance-scoped constructor for the given <paramref name="type"/> which has the 
            given <paramref name="parameterTypes"/>.
            </summary>
            <param name="type">The type for which to retrieve the constructor.</param>
            <param name="parameterTypes">
            Zero or more Types representing the number, order, and type of the parameters for the constructor 
            to retrieve. This parameter is optional.
            </param>
            <returns>
            The given <paramref name="type"/>'s matching non-public, instance-scoped constructor, or null if none exists.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining field information in .NET Standard 1.0 and .NET 4.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetPublicStaticFields(System.Type)">
            <summary>
            Gets the public, static-scoped fields for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the fields.</param>
            <returns>The given <paramref name="type"/>'s public, static-scoped fields.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetPublicStaticField(System.Type,System.String)">
            <summary>
            Gets the public, static-scoped field with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the field.</param>
            <param name="name">The name of the field to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching public, static-scoped field, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetPublicInstanceFields(System.Type)">
            <summary>
            Gets the public, instance-scoped fields for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the fields.</param>
            <returns>The given <paramref name="type"/>'s public, instance-scoped fields.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetPublicInstanceField(System.Type,System.String)">
            <summary>
            Gets the public, instance-scoped field with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the field.</param>
            <param name="name">The name of the field to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching public, instance-scoped field, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetNonPublicStaticFields(System.Type)">
            <summary>
            Gets the non-public, static-scoped fields for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the fields.</param>
            <returns>The given <paramref name="type"/>'s non-public, static-scoped fields.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetNonPublicStaticField(System.Type,System.String)">
            <summary>
            Gets the non-public, static-scoped field with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the field.</param>
            <param name="name">The name of the field to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching non-public, static-scoped field, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetNonPublicInstanceFields(System.Type)">
            <summary>
            Gets the non-public, instance-scoped fields for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the fields.</param>
            <returns>The given <paramref name="type"/>'s non-public, instance-scoped fields.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.FieldExtensionsPolyfill.GetNonPublicInstanceField(System.Type,System.String)">
            <summary>
            Gets the non-public, instance-scoped field with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the field.</param>
            <param name="name">The name of the field to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching non-public, instance-scoped field, or null if none exists.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining member information in .NET Standard 1.0 and .NET 4.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.HasAttribute``1(System.Reflection.MemberInfo)">
            <summary>
            Returns a value indicating if the <paramref name="memberInfo"/> has the Attribute given
            in the <typeparamref name="TAttribute"/> type argument.
            </summary>
            <typeparam name="TAttribute">The Attribute type for which to make the determination.</typeparam>
            <param name="memberInfo">The MemberInfo for which to make the determination.</param>
            <returns>
            True if the <paramref name="memberInfo"/> has the given <typeparamref name="TAttribute"/>,
            otherwise false.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetPublicStaticMembers(System.Type)">
            <summary>
            Gets the public, static-scoped members for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the member.</param>
            <returns>
            The public, static-scoped members for the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetPublicStaticMembers(System.Type,System.String)">
            <summary>
            Gets the public, static-scoped members with the given <paramref name="name"/>
            for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the members.</param>
            <param name="name">The name of the members to find.</param>
            <returns>
            The public, static-scoped members with the given <paramref name="name"/> for 
            the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetPublicStaticMember(System.Type,System.String)">
            <summary>
            Gets the public, static-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the named member.</param>
            <param name="name">The name of the member to find.</param>
            <returns>
            The public, static-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetPublicInstanceMembers(System.Type)">
            <summary>
            Gets the public, instance-scoped members for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the member.</param>
            <returns>
            The public, instance-scoped members for the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetPublicInstanceMembers(System.Type,System.String)">
            <summary>
            Gets the public, instance-scoped members with the given <paramref name="name"/>
            for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the members.</param>
            <param name="name">The name of the members to find.</param>
            <returns>
            The public, instance-scoped members with the given <paramref name="name"/> for 
            the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetPublicInstanceMember(System.Type,System.String)">
            <summary>
            Gets the public, instance-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the named member.</param>
            <param name="name">The name of the member to find.</param>
            <returns>
            The public, instance-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetNonPublicStaticMembers(System.Type)">
            <summary>
            Gets the non-public, static-scoped members for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the member.</param>
            <returns>
            The non-public, static-scoped members for the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetNonPublicStaticMembers(System.Type,System.String)">
            <summary>
            Gets the non-public, static-scoped members with the given <paramref name="name"/>
            for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the members.</param>
            <param name="name">The name of the members to find.</param>
            <returns>
            The non-public, static-scoped members with the given <paramref name="name"/> for 
            the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetNonPublicStaticMember(System.Type,System.String)">
            <summary>
            Gets the non-public, static-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the named member.</param>
            <param name="name">The name of the member to find.</param>
            <returns>
            The non-public, static-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetNonPublicInstanceMembers(System.Type)">
            <summary>
            Gets the non-public, instance-scoped members for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the member.</param>
            <returns>
            The non-public, instance-scoped members for the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetNonPublicInstanceMembers(System.Type,System.String)">
            <summary>
            Gets the non-public, instance-scoped members with the given <paramref name="name"/>
            for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the members.</param>
            <param name="name">The name of the members to find.</param>
            <returns>
            The non-public, instance-scoped members with the given <paramref name="name"/> for 
            the given <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MemberExtensionsPolyfill.GetNonPublicInstanceMember(System.Type,System.String)">
            <summary>
            Gets the non-public, instance-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the named member.</param>
            <param name="name">The name of the member to find.</param>
            <returns>
            The non-public, instance-scoped member with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining method and parameter information in .NET Standard 1.0 and .NET 4.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.IsParamsArray(System.Reflection.ParameterInfo)">
            <summary>
            Returns a value indicating if the given <paramref name="parameter"/> is a params array.
            </summary>
            <param name="parameter">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="parameter"/> is a params array, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.IsExtensionMethod(System.Reflection.MethodInfo)">
            <summary>
            Returns a value indicating if the <paramref name="method"/> is an extension method.
            </summary>
            <param name="method">The method for which to make the determination.</param>
            <returns>True if the <paramref name="method"/> is an extension method, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicMethods(System.Type)">
            <summary>
            Gets the public methods for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <returns>The given <paramref name="type"/>'s public methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicMethods(System.Type,System.String)">
            <summary>
            Gets the public methods with the given <paramref name="name"/>, for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the methods to find.</param>
            <returns>The given <paramref name="type"/>'s matching public methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicMethod(System.Type,System.String)">
            <summary>
            Gets the public method with the given <paramref name="name"/> for the given 
            <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the method.</param>
            <param name="name">The name of the method to find.</param>
            <returns>
            The public method with the given <paramref name="name"/> for the given <paramref name="type"/>, 
            or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicMethod(System.Type,System.String,System.Int32)">
            <summary>
            Gets the public method with the given <paramref name="name"/> and <paramref name="parameterCount"/> 
            for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterCount">The number of parameters the method overload should have.</param>
            <returns>
            The matching public method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets the public method with the given <paramref name="name"/> and <paramref name="parameterTypes"/> 
            for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterTypes">The Types of the parameters the method overload should have.</param>
            <returns>
            The matching public method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicStaticMethods(System.Type)">
            <summary>
            Gets the public, static-scoped methods for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <returns>The given <paramref name="type"/>'s public, static-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicStaticMethods(System.Type,System.String)">
            <summary>
            Gets the public, static-scoped methods with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the methods to find.</param>
            <returns>The given <paramref name="type"/>'s matching public, static-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicStaticMethod(System.Type,System.String)">
            <summary>
            Gets the public, static-scoped method with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the method.</param>
            <param name="name">The name of the method to find.</param>
            <returns>
            The public, static-scoped method with the given <paramref name="name"/> for the given 
            <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicStaticMethod(System.Type,System.String,System.Int32)">
            <summary>
            Gets the public, static-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterCount"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterCount">The number of parameters the method overload should have.</param>
            <returns>
            The matching public, static-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicStaticMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets the public, static-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterTypes"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterTypes">The Types of the parameters the method overload should have.</param>
            <returns>
            The matching public, static-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicInstanceMethods(System.Type)">
            <summary>
            Gets the public, instance-scoped methods for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <returns>The given <paramref name="type"/>'s public, instance-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicInstanceMethods(System.Type,System.String)">
            <summary>
            Gets the public, instance-scoped methods with the given <paramref name="name"/> for the 
            given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the methods to find.</param>
            <returns>The given <paramref name="type"/>'s matching public, instance-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicInstanceMethod(System.Type,System.String)">
            <summary>
            Gets the public, instance-scoped method with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <returns>
            The matching public, instance-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicInstanceMethod(System.Type,System.String,System.Int32)">
            <summary>
            Gets the public, instance-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterCount"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterCount">The number of parameters the method overload should have.</param>
            <returns>
            The matching public, instance-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetPublicInstanceMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets the public, instance-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterTypes"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterTypes">The Types of the parameters the method overload should have.</param>
            <returns>
            The matching public, instance-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicStaticMethods(System.Type)">
            <summary>
            Gets the non-public, static-scoped methods for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <returns>The given <paramref name="type"/>'s non-public, static-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicStaticMethods(System.Type,System.String)">
            <summary>
            Gets the non-public, static-scoped methods with the given <paramref name="name"/> for the 
            given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <returns>The given <paramref name="type"/>'s matching non-public, static-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicStaticMethod(System.Type,System.String)">
            <summary>
            Gets the non-public, static-scoped method with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the method.</param>
            <param name="name">The name of the method to find.</param>
            <returns>
            The non-public, static-scoped method with the given <paramref name="name"/> for the given 
            <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicStaticMethod(System.Type,System.String,System.Int32)">
            <summary>
            Gets the non-public, static-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterCount"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterCount">The number of parameters the method overload should have.</param>
            <returns>
            The matching non-public, static-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicStaticMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets the non-public, static-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterTypes"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterTypes">The Types of the parameters the method overload should have.</param>
            <returns>
            The matching non-public, static-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicInstanceMethods(System.Type)">
            <summary>
            Gets the non-public, instance-scoped methods for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <returns>The given <paramref name="type"/>'s non-public, instance-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicInstanceMethods(System.Type,System.String)">
            <summary>
            Gets the non-public, instance-scoped methods with the given <paramref name="name"/> for the 
            given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the methods to find.</param>
            <returns>The given <paramref name="type"/>'s matching non-public, instance-scoped methods.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicInstanceMethod(System.Type,System.String)">
            <summary>
            Gets the non-public, instance-scoped method with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <returns>
            The non-public, instance-scoped method with the given <paramref name="name"/> for the given 
            <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicInstanceMethod(System.Type,System.String,System.Int32)">
            <summary>
            Gets the non-public, instance-scoped method with the given <paramref name="name"/> for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterCount">The number of parameters the method overload should have.</param>
            <returns>
            The non-public, instance-scoped method with the given <paramref name="name"/> for the given 
            <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.MethodExtensionsPolyfill.GetNonPublicInstanceMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets the non-public, instance-scoped method with the given <paramref name="name"/> and 
            <paramref name="parameterTypes"/> for the given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the methods.</param>
            <param name="name">The name of the method to find.</param>
            <param name="parameterTypes">The Types of the parameters the method overload should have.</param>
            <returns>
            The matching non-public, instance-scoped method for the given <paramref name="type"/>, or null if none exists.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.NetStandardTypeCode">
            <summary>
            Provides a replacement for the TypeCode enum, which is missing in .NETStandard 1.0.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Empty">
            <summary>
            0. A null reference.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Object">
            <summary>
            1. A general type representing any reference or value type not explicitly represented 
            by another TypeCode.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.DBNull">
            <summary>
            2. A database null (column) value.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Boolean">
            <summary>
            3. A simple type representing Boolean values of true or false.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Char">
            <summary>
            4. An integral type representing unsigned 16-bit integers with values between 0 and 65535. 
            The set of possible values for the System.TypeCode.Char type corresponds to the Unicode 
            character set.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.SByte">
            <summary>
            5. An integral type representing signed 8-bit integers with values between -128 and 127.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Byte">
            <summary>
            6. An integral type representing unsigned 8-bit integers with values between 0 and 255.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Int16">
            <summary>
            7. An integral type representing signed 16-bit integers with values between -32768 and 32767.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.UInt16">
            <summary>
            8. An integral type representing unsigned 16-bit integers with values between 0 and 65535.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Int32">
            <summary>
            9. An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.UInt32">
            <summary>
            10. An integral type representing unsigned 32-bit integers with values between 0 and 4294967295.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Int64">
            <summary>
            11. An integral type representing signed 64-bit integers with values between -9223372036854775808 and 
            9223372036854775807.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.UInt64">
            <summary>
            12. An integral type representing unsigned 64-bit integers with values between 0 and 
            18446744073709551615.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Single">
            <summary>
            13. A floating point type representing values ranging from approximately 1.5 x 10 -45 
            to 3.4 x 10 38 with a precision of 7 digits.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Double">
            <summary>
            14. A floating point type representing values ranging from approximately 5.0 x 10 -324 to 
            1.7 x 10 308 with a precision of 15-16 digits.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.Decimal">
            <summary>
            15. A simple type representing values ranging from 1.0 x 10 -28 to approximately 
            7.9 x 10 28 with 28-29 significant digits.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.DateTime">
            <summary>
            16. A type representing a date and time value.
            </summary>
        </member>
        <member name="F:AgileObjects.NetStandardPolyfills.NetStandardTypeCode.String">
            <summary>
            18. A sealed class type representing Unicode character strings.
            </summary>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining operator information in .NET Standard 1.0 and .NET 4.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.IsImplicitOperator(System.Reflection.MethodInfo)">
            <summary>
            Returns a value indicating whether the <paramref name="method"/> is an implicit operator.
            </summary>
            <param name="method">The method for which to make the determination.</param>
            <returns>True if the <paramref name="method"/> is an implicit operator, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.IsExplicitOperator(System.Reflection.MethodInfo)">
            <summary>
            Returns a value indicating whether the <paramref name="method"/> is an explicit operator.
            </summary>
            <param name="method">The method for which to make the determination.</param>
            <returns>True if the <paramref name="method"/> is an explicit operator, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.GetOperators(System.Type,System.Action{AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.OperatorSelector})">
            <summary>
            Gets the <paramref name="type" />'s implicit and explicit operators, optionally of the type 
            specified by the given <paramref name="matcher"/>.
            </summary>
            <param name="type">The type from which to retrieve the operators.</param>
            <param name="matcher">An action specifying the type of implicit operator to retrieve.</param>
            <returns>The <paramref name="type" />'s implicit and explicit operators.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.GetImplicitOperators(System.Type)">
            <summary>
            Gets the <paramref name="type" />'s implicit operators.
            </summary>
            <param name="type">The type from which to retrieve the operators.</param>
            <returns>The <paramref name="type" />'s implicit operators.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.GetImplicitOperator(System.Type,System.Action{AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.OperatorSelector})">
            <summary>
            Gets the <paramref name="type" />'s implicit operator of the type specified by the given 
            <paramref name="matcher"/>.
            </summary>
            <param name="type">The type from which to retrieve the operator.</param>
            <param name="matcher">An action specifying the type of implicit operator to retrieve.</param>
            <returns>
            The <paramref name="type" />'s implicit operator of the type specified by the given 
            <paramref name="matcher"/>, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.GetExplicitOperators(System.Type)">
            <summary>
            Gets the <paramref name="type" />'s explicit operators.
            </summary>
            <param name="type">The type from which to retrieve the operators.</param>
            <returns>The <paramref name="type" />'s explicit operators.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.GetExplicitOperator(System.Type,System.Action{AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.OperatorSelector})">
            <summary>
            Gets the <paramref name="type" />'s explicit operator of the type specified by the given 
            <paramref name="matcher"/>.
            </summary>
            <param name="type">The type from which to retrieve the operator.</param>
            <param name="matcher">An action specifying the type of explicit operator to retrieve.</param>
            <returns>
            The <paramref name="type" />'s explicit operator of the type specified by the given 
            <paramref name="matcher"/>, or null if none exists.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.OperatorSelector">
            <summary>
            Provides options for selecting a particular operator.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.OperatorSelector.From``1">
            <summary>
            Select the operator which converts the given <typeparamref name="TInput">type</typeparamref>
            to the type in question.
            </summary>
            <typeparam name="TInput">The input type of the operator to select.</typeparam>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.OperatorExtensionsPolyfill.OperatorSelector.To``1">
            <summary>
            Select the operator which converts the type in question to the given 
            <typeparamref name="TReturn">return type</typeparamref>.
            </summary>
            <typeparam name="TReturn">The output type of the operator to select.</typeparam>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining property information in .NET Standard 1.0 and .NET 4.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.IsReadable(System.Reflection.PropertyInfo)">
            <summary>
            Returns a value indicating whether the <paramref name="property"/> is readable.
            </summary>
            <param name="property">The property for which to make the determination.</param>
            <returns>True if the <paramref name="property"/> is readable, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.IsWritable(System.Reflection.PropertyInfo)">
            <summary>
            Returns a value indicating whether the <paramref name="property"/> is writable.
            </summary>
            <param name="property">The property for which to make the determination.</param>
            <returns>True if the <paramref name="property"/> is writable, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetPublicStaticProperties(System.Type)">
            <summary>
            Gets the public, static-scoped properties for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the properties.</param>
            <returns>The given <paramref name="type"/>'s public, static-scoped properties.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetPublicStaticProperty(System.Type,System.String)">
            <summary>
            Gets the public, static-scoped property with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the property.</param>
            <param name="name">The name of the property to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching public, static-scoped property, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetPublicInstanceProperties(System.Type)">
            <summary>
            Gets the public, instance-scoped properties for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the properties.</param>
            <returns>The given <paramref name="type"/>'s public, instance-scoped properties.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetPublicInstanceProperty(System.Type,System.String)">
            <summary>
            Gets the public, instance-scoped property with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the property.</param>
            <param name="name">The name of the property to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching public, instance-scoped property, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetNonPublicStaticProperties(System.Type)">
            <summary>
            Gets the non-public, static-scoped properties for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the properties.</param>
            <returns>The given <paramref name="type"/>'s non-public, static-scoped properties.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetNonPublicStaticProperty(System.Type,System.String)">
            <summary>
            Gets the non-public, static-scoped property with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the property.</param>
            <param name="name">The name of the property to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching non-public, static-scoped property, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetNonPublicInstanceProperties(System.Type)">
            <summary>
            Gets the non-public, instance-scoped properties for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type from which to retrieve the properties.</param>
            <returns>The given <paramref name="type"/>'s non-public, instance-scoped properties.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetNonPublicInstanceProperty(System.Type,System.String)">
            <summary>
            Gets the non-public, instance-scoped property with the given <paramref name="name"/>, for the 
            given <paramref name="type"/>, or null if none exists.
            </summary>
            <param name="type">The type from which to retrieve the property.</param>
            <param name="name">The name of the property to retrieve.</param>
            <returns>
            The given <paramref name="type"/>'s matching non-public, instance-scoped property, or null if none exists.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.IsPublic(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the given <paramref name="property"/> has a public getter or setter.
            </summary>
            <param name="property">The property for which to make the determination.</param>
            <returns>True if the given <paramref name="property"/> has a public getter or setter, otherwise falsek.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.IsStatic(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the given <paramref name="property"/> is static.
            </summary>
            <param name="property">The property for which to make the determination.</param>
            <returns>True if the given <paramref name="property"/> is static, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.IsIndexer(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the given <paramref name="property"/> is an indexer.
            </summary>
            <param name="property">The property for which to make the determination.</param>
            <returns>True if the given <paramref name="property"/> is an indexer, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetAccessors(System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Returns an array whose elements reflect the public and, if specified, non-public get, set, and 
            other accessors of the property reflected by the current instance.
            </summary>
            <param name="property">The property for which to make the determination.</param>
            <param name="nonPublic">
            Whether non-public methods should be returned in the MethodInfo array: true if non-public methods 
            should be included; otherwise false. Defaults to false if not supplied.
            </param>
            <returns>
            An array of System.Reflection.MethodInfo objects whose elements reflect the get, set, and other 
            accessors of the property reflected by the current instance. If <paramref name="nonPublic"/> is 
            true, this array contains public and non-public get, set, and other accessors. If 
            <paramref name="nonPublic"/> is false, this array contains only public get, set, and other 
            accessors. If no accessors with the specified visibility are found, this method returns an empty array.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetGetter(System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Returns the public or non-public get accessor for this <paramref name="property"/>.
            </summary>
            <param name="property">The property for which to retrieve the accessor.</param>
            <param name="nonPublic">
            Whether a non-public get accessor should be returned: true if a non-public accessor should be 
            returned, otherwise false.
            </param>
            <returns>
            A MethodInfo representing the get accessor for this <paramref name="property"/>, if 
            <paramref name="nonPublic"/> is true. Returns null if <paramref name="nonPublic"/> is false and 
            the get accessor is non-public, or if <paramref name="nonPublic"/> is true but no get accessors exist.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.PropertyExtensionsPolyfill.GetSetter(System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Returns the public or non-public set accessor for this <paramref name="property"/>.
            </summary>
            <param name="property">The property for which to retrieve the accessor.</param>
            <param name="nonPublic">
            Whether a non-public set accessor should be returned: true if a non-public accessor should be 
            returned, otherwise false.
            </param>
            <returns>
            A MethodInfo representing the set accessor for this <paramref name="property"/>, if 
            <paramref name="nonPublic"/> is true. Returns null if <paramref name="nonPublic"/> is false and 
            the set accessor is non-public, or if <paramref name="nonPublic"/> is true but no set accessors exist.
            </returns>
        </member>
        <member name="T:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill">
            <summary>
            Provides a set of static methods for obtaining type information in .NET Standard 1.0.
            </summary>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsPublic(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is public.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is public, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsClass(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is a class.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is a class, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsValueType(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is a value type.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is a value type, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsInterface(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is an interface.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is an interface, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsSealed(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is sealed.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is sealed, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsAbstract(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is abstract.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is abstract, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsAnonymous(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is an
            anonymous type. See http://stackoverflow.com/questions/2483023/how-to-test-if-a-type-is-anonymous
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>
            True if the given <paramref name="type"/> is an anonymous type, otherwise false.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsEnum(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is an enum.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is an enum, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsPrimitive(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is a primitive.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is a primitive, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsGenericType(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is a generic type.
            </summary>
            <param name="type">The type for which to make the determination.</param>
            <returns>True if the given <paramref name="type"/> is a generic type, otherwise false.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsClosedTypeOf(System.Type,System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> is a closed version of the
            given <paramref name="genericTypeDefinition"/>.
            </summary>
            <param name="type">The type for which to make the determination, e.g. List{string}.</param>
            <param name="genericTypeDefinition">
            The open generic type for which to make the determination, , e.g. List{}.
            </param>
            <returns>
            True if the given <paramref name="type"/> is a closed version of the given 
            <paramref name="genericTypeDefinition"/>, otherwise false.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.GetGenericTypeArguments(System.Type)">
            <summary>
            Returns an array of Types that represent the type arguments of a generic type or the 
            type parameters of a generic type definition.
            </summary>
            <param name="type">The type for which to retrieve the generic arguments.</param>
            <returns>
            An array of Types that represent the type arguments of a generic type, or an empty array 
            if the current type is not a generic type.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.GetAssembly(System.Type)">
            <summary>
            Gets the Assembly to which the given <paramref name="type"/> belongs.
            </summary>
            <param name="type">The type for which to retrieve the Assembly.</param>
            <returns>The Assembly to which the given <paramref name="type"/> belongs.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.GetBaseType(System.Type)">
            <summary>
            Gets the given <paramref name="type"/>'s base type or null if there is none.
            </summary>
            <param name="type">The type for which to retrieve the base type.</param>
            <returns>The given <paramref name="type"/>'s base type or null if there is none.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.GetAllInterfaces(System.Type)">
            <summary>
            Gets all the interfaces implemented or inherited by the current <paramref name="type"/>.
            </summary>
            <param name="type">The Type for which to retrieve the implemented interfaces.</param>
            <returns>
            An array of Types representing all the interfaces implemented or inherited by the current 
            <paramref name="type"/>, or an empty array if no interfaces are implemented or inherited.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsDerivedFrom(System.Type,System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="childType"/> is derived from
            the given <paramref name="parentType"/>.
            </summary>
            <param name="childType">The descendant type for which to make the determination.</param>
            <param name="parentType">The ancestor type for which to make the determination.</param>
            <returns>
            True if the given <paramref name="childType"/> is derived from the given 
            <paramref name="parentType"/>, otherwise false.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.IsAssignableTo(System.Type,System.Type)">
            <summary>
            Determines whether an instance of the current <paramref name="assignableType"/> can be assigned 
            to an instance of the given <paramref name="type"/>.
            </summary>
            <param name="assignableType">The Type the assignability of which should be determined.</param>
            <param name="type">The Type to compare with the current type.</param>
            <returns>
            True if the <paramref name="type"/> and the current <paramref name="assignableType"/> represent 
            the same type, or if the current <paramref name="assignableType"/> is in the inheritance hierarchy 
            of the <paramref name="type"/>, or if the current <paramref name="assignableType"/> is an interface 
            that the <paramref name="type"/> implements, or if the <paramref name="type"/> is a generic type 
            parameter and the current <paramref name="assignableType"/> represents one of its constraints. 
            False if none of these conditions are true, or if the <paramref name="type"/> is null.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.HasAttribute``1(System.Type)">
            <summary>
            Returns a value indicating if the given <paramref name="type"/> has the Attribute
            given in the <typeparamref name="TAttribute"/> type argument.
            </summary>
            <typeparam name="TAttribute">The Attribute type for which to make the determination.</typeparam>
            <param name="type">The type for which to make the determination.</param>
            <returns>
            True if the given <paramref name="type"/> has the given <typeparamref name="TAttribute"/>,
            otherwise false.
            </returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.GetAttributes(System.Type)">
            <summary>
            Gets the TypeAttributes value applied to the given <paramref name="type"/>.
            </summary>
            <param name="type">The type for which to retrieve the TypeAttributes value.</param>
            <returns>The TypeAttributes value applied to the given <paramref name="type"/>.</returns>
        </member>
        <member name="M:AgileObjects.NetStandardPolyfills.TypeExtensionsPolyfill.GetTypeCode(System.Type)">
            <summary>
            Gets the appropriate <see cref="T:AgileObjects.NetStandardPolyfills.NetStandardTypeCode"/> value for the given <paramref name="type"/>.
            </summary>
            <param name="type">The type for which to retrieve the <see cref="T:AgileObjects.NetStandardPolyfills.NetStandardTypeCode"/>.</param>
            <returns>The appropriate <see cref="T:AgileObjects.NetStandardPolyfills.NetStandardTypeCode"/> value.</returns>
        </member>
    </members>
</doc>
